// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using STEMLabsServer.Data;

#nullable disable

namespace STEMLabsServer.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20250513214446_AddedLaboratoryEntities")]
    partial class AddedLaboratoryEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Diploma_Server.Models.Entities.Laboratory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SceneId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Laboratories");
                });

            modelBuilder.Entity("Diploma_Server.Models.Entities.LaboratoryChecklistStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LaboratoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Statement")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StepNumber")
                        .HasColumnType("integer");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LaboratoryId");

                    b.ToTable("LaboratoryChecklistSteps");
                });

            modelBuilder.Entity("Diploma_Server.Models.Entities.LaboratorySession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("InviteCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LaboratoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LaboratoryId");

                    b.ToTable("LaboratorySessions");
                });

            modelBuilder.Entity("Diploma_Server.Models.Entities.StudentLaboratoryCompletedStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LaboratoryChecklistStepId")
                        .HasColumnType("integer");

                    b.Property<int>("LaboratorySessionId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LaboratoryChecklistStepId");

                    b.HasIndex("LaboratorySessionId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentLaboratoryCompletedSteps");
                });

            modelBuilder.Entity("Diploma_Server.Models.Entities.StudentLaboratoryReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LaboratorySessionId")
                        .HasColumnType("integer");

                    b.Property<string>("ObservationsImageLink")
                        .HasColumnType("text");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LaboratorySessionId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentLaboratoryReports");
                });

            modelBuilder.Entity("Diploma_Server.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHashed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<byte>("UserRole")
                        .HasColumnType("smallint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Diploma_Server.Models.Entities.LaboratoryChecklistStep", b =>
                {
                    b.HasOne("Diploma_Server.Models.Entities.Laboratory", "Laboratory")
                        .WithMany()
                        .HasForeignKey("LaboratoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratory");
                });

            modelBuilder.Entity("Diploma_Server.Models.Entities.LaboratorySession", b =>
                {
                    b.HasOne("Diploma_Server.Models.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diploma_Server.Models.Entities.Laboratory", "Laboratory")
                        .WithMany()
                        .HasForeignKey("LaboratoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Laboratory");
                });

            modelBuilder.Entity("Diploma_Server.Models.Entities.StudentLaboratoryCompletedStep", b =>
                {
                    b.HasOne("Diploma_Server.Models.Entities.LaboratoryChecklistStep", "LaboratoryChecklistStep")
                        .WithMany()
                        .HasForeignKey("LaboratoryChecklistStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diploma_Server.Models.Entities.LaboratorySession", "LaboratorySession")
                        .WithMany()
                        .HasForeignKey("LaboratorySessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diploma_Server.Models.Entities.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaboratoryChecklistStep");

                    b.Navigation("LaboratorySession");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Diploma_Server.Models.Entities.StudentLaboratoryReport", b =>
                {
                    b.HasOne("Diploma_Server.Models.Entities.LaboratorySession", "LaboratorySession")
                        .WithMany()
                        .HasForeignKey("LaboratorySessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diploma_Server.Models.Entities.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaboratorySession");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
